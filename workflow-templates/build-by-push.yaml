name: Docker Build by push

on:
  push:
    branches:
      - develop
      - main

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          ref: ${{ github.head_ref }}

      - name: Extract name from package.json
        uses: sergeysova/jq-action@v2
        id: version
        with:
          cmd: 'jq .name package.json -r'

      - name: Extract version from package.json
        uses: sergeysova/jq-action@v2
        id: version
        with:
          cmd: 'jq .version package.json -r'

      - name: Get Git Commit SHA
        run: |
          echo "COMMIT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
          echo "STAGE=dev" >> $GITHUB_ENV

      - name: Get latest commit SHA on develop
        if: github.ref == 'refs/heads/main'
        run: |
          echo "DEVELOP_SHA=$(git rev-parse origin/develop | cut -c1-7)" >> $GITHUB_ENV
          echo "STAGE=main" >> $GITHUB_ENV

      - name: Check if main SHA is the same as develop
        if: github.ref == 'refs/heads/main'
        run: |
          if [ "$COMMIT_SHA" == "$DEVELOP_SHA" ]; then
            echo "DOCKER_BUILD=false" >> $GITHUB_ENV
          else
            echo "DOCKER_BUILD=true" >> $GITHUB_ENV
          fi

      - name: Set up Docker Buildx
        if: github.ref == 'refs/heads/develop' || (github.ref == 'refs/heads/main' && env.DOCKER_BUILD == 'true')
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: github.ref == 'refs/heads/develop' || (github.ref == 'refs/heads/main' && env.DOCKER_BUILD == 'true')
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        if: github.ref == 'refs/heads/develop' || (github.ref == 'refs/heads/main' && env.DOCKER_BUILD == 'true')
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deploy/app/Dockerfile
          platforms: linux/amd64
          push: true
          tags: lambda256/{{ steps.name.outputs.value }}:v${{ steps.version.outputs.value }}-${{ env.COMMIT_SHA }}
          build-args: |
            "PAU=${{vars.PA_USERNAME_LUNIVERSEDEVOPS}}"
            "PAT=${{secrets.PA_TOKEN_LUNIVERSEDEVOPS}}"
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Trigger helm repos workflow
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PA_TOKEN_LUNIVERSEDEVOPS }}
          script: |
            await github.rest.repos.createDispatchEvent({
              owner: context.repo.owner,
              repo: '<Namespace>-helm-chart',
              event_type: 'webhook',
              client_payload: {
                actor: '${{ github.actor }}',
                group: '<Group>',
                ns: '<Namespace>',
                ref_name: '${{ github.ref_name }}'
                applicationName: {{ steps.name.outputs.value }},
                imageTag: 'lambda256//{{ steps.name.outputs.value }}:v${{ steps.version.outputs.value }}-${{ env.COMMIT_SHA }}'
              }
            })

      - name: Send Slack Notification
        id: slack
        uses: slackapi/slack-github-action@v1.25.0
        with:
          # This data can be any valid JSON from a previous step in the GitHub Action
          payload: |
            {
              "image": "lambda256/nova-rpc-provider:v${{ steps.version.outputs.value }}-${{ env.COMMIT_SHA }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ vars.SLACK_WEBHOOK_URL }}
